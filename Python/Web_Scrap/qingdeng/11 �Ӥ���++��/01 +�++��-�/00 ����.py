"""
爬虫项目<案例>实现的步骤:
1. 找数据所对应的地址< url(统一资源定位符) >  系统分析网页性质 <静态数据/动态数据>
2. 请求地址数据(文本, js数据, 图片数据, css数据...)
3. 数据解析, 解析你想要的数据, 剔除不想要的数据(css选择器, xpath节点提取, 正则表达式)
4. 数据的保存 (本地文件<txt,Excel,json...>, 数据库)
"""

"""
让你在一周内抓取百万级别的数据
    N个子页面, 一个页面的数据请求花两秒
    数据解析
    请求也是耗时, 程序会通过一些不确定卡顿<延时>
    
    在程序卡顿的时候, 我们可以考虑让这个卡顿执行的任务放一边
    
    cpu 如果不忙了, 会找到这个放一边的任务, 询问任务有没有执行完?
    
    
    挂起
    
    多任务编发编程,  多进程,多线程,  多协程<Python独有的>
        好处: 压榨计算机得性能, 让任务执行的速速非常快
"""


